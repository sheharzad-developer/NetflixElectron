{"version":3,"sources":["api/Movies.js","components/MovieRow/index.js","components/FeaturedMovie/index.js","components/Header/index.js","components/Footer/index.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","MovieRow","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listWidth","results","length","marginLeft","width","map","movie","index","src","poster_path","alt","original_title","FeaturedMovie","item","yearDate","Date","first_air_date","genres","forEach","value","push","name","description","overview","substring","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","join","Header","collapsed","href","Footer","App","movieList","setMovieList","featuredMovie","setFeaturedMovie","collapsedHeader","setCollapsedHeader","useEffect","Movies","movies","originals","filter","randomNumber","floor","random","chosen","console","log","id","chosenInfo","loadMovies","scrollListener","scrollY","addEventListener","removeEventListener","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59505c9c.chunk.js","sourcesContent":["const API_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'b822441b5788e5af34364bd716eab043';\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${API_URL}/${endpoint}`);\n    const json = await req.json();\n    return json;\n}\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Originais do netflix',\n                items: await basicFetch(`discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`),\n            },\n            {\n                slug: 'trending',\n                title: 'Recomendados para você',\n                items: await basicFetch(`trending/all/week?language=pt-BR&api_key=${API_KEY}`),\n            },\n            {\n                slug: 'toprated',\n                title: 'Em alta',\n                items: await basicFetch(`movie/top_rated?language=pt-BR&api_key=${API_KEY}`),\n            },\n            {\n                slug: 'action',\n                title: 'Ação',\n                items: await basicFetch(`discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`),\n            },\n            {\n                slug: 'comedy',\n                title: 'Comédia',\n                items: await basicFetch(`discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`),\n            },\n            {\n                slug: 'horror',\n                title: 'Terror',\n                items: await basicFetch(`discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`),\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await basicFetch(`discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`),\n            },\n            {\n                slug: 'documentary',\n                title: 'Documentários',\n                items: await basicFetch(`discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`),\n            },\n        ]\n    },\n\n    getMovieInfo: async(movieId, type) => {\n        const info = await basicFetch(`${type}/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n        return info;\n    }\n}","import React, { useState } from 'react'\nimport './MovieRow.css';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\n\nfunction MovieRow({title, items}) {\n    const [scrollX, setScrollX] = useState(-400);\n\n    const handleLeftArrow = () => {\n        let x = scrollX + Math.round(window.innerWidth / 2);\n        if(x > 0 ) {\n            x = 0;\n        }\n        setScrollX(x);\n    }\n\n    const handleRightArrow = () => {\n        let x = scrollX - Math.round(window.innerWidth / 2);\n        let listWidth = items.results.length * 150;\n        if((window.innerWidth - listWidth ) > x) {\n            x = (window.innerWidth - listWidth) - 60;\n        }\n        setScrollX(x);\n    }\n    \n    return (\n        <div className=\"movie-row\">\n            <h2 className=\"movie-row-title\">{title}</h2>\n            <div className=\"movie-row-left\" onClick={handleLeftArrow}> \n                <NavigateBeforeIcon style={{fontSize: 50}}/>\n            </div>\n            <div className=\"movie-row-right\" onClick={handleRightArrow}> \n                <NavigateNextIcon style={{fontSize: 50}}/>\n            </div>\n            <div className=\"movie-row-listarea\">\n                <div className=\"movie-row-list\" style={{\n                    marginLeft: scrollX,\n                    width: items.results.length * 150\n                }}>\n                    {items.results && items.results.map((movie, index) => (\n                        <div key={index}  className=\"movie-row-item\">\n                            <img src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`} alt={movie.original_title} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MovieRow\n","import React from 'react'\nimport './FeaturedMovie.css';\n\nfunction FeaturedMovie({item}) {\n    const yearDate = new Date(item.first_air_date);\n\n    const genres = [];\n    \n    item.genres.forEach((value, index) => {\n        genres.push(value.name)\n    })\n\n    let description = item.overview;\n    if(description.length > 140) {\n        description = description.substring(0, 140) + '...';\n    }\n\n    return (\n        <div className=\"featured-movie\" style={{\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n        }}>\n            <div className=\"featured-vertical\">\n                <div className=\"featured-horizontal\">\n                    <div className=\"featured-name\">{item.original_name}</div>\n                    <div className=\"featured-info\">\n                        <div className=\"featured-points\">{item.vote_average} pontos</div>\n                        <div className=\"featured-year\">{yearDate.getFullYear()}</div>\n                        <div className=\"featured-seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n                    </div>\n                    <div className=\"featured-description\">{description}</div>\n                    <div className=\"featured-buttons\">\n                            <button className=\"featured-watch-button\"> ► Assistir </button>\n                            <button className=\"featured-favorite-button\"> + Minha lista  </button>\n                    </div>\n                    <div className=\"featured-genres\">\n                        Gêneros: {genres.join(', ')}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default FeaturedMovie\n","import React from 'react'\nimport './Header.css';\n\nfunction Header({collapsed}) {\n    return (\n        <header className={collapsed ? 'collapsed' : ''}>\n            <div className=\"header-logo\">\n                <a href=\"/\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" />\n                </a>\n            </div>\n            <div className=\"header-user-img\">\n                <a href=\"/\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" />\n                </a>\n            </div>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport './Footer.css';\nfunction Footer() {\n    return (\n        <footer>\n            Feito por Lucas Visentin<br />\n            Direitos para Netflix\n        </footer>\n    )\n}\n\nexport default Footer\n","import React, { useEffect, useState } from 'react'\nimport Movies from './api/Movies';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport './App.css';\n\nfunction App() {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredMovie, setFeaturedMovie] = useState(null);\n  const [collapsedHeader, setCollapsedHeader] = useState(false);\n\n\n  useEffect(() => {\n    const loadMovies = async () => {\n      const movies = await Movies.getHomeList();\n      setMovieList(movies);\n      \n      const originals = movies.filter(movie => movie.slug == 'originals');\n      const randomNumber = Math.floor(Math.random() * (originals[0].items.results.length) - 1);\n      const chosen = originals[0].items.results[randomNumber];\n      console.log(originals, randomNumber, chosen)\n\n      const chosenInfo = await Movies.getMovieInfo(chosen.id, 'tv');\n      setFeaturedMovie(chosenInfo);\n      console.log(chosenInfo)\n    }\n\n    loadMovies();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if(window.scrollY > 50) {\n        setCollapsedHeader(true);\n      } else {\n        setCollapsedHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  })\n\n  return (\n    <div className=\"page\">\n    \n      <Header collapsed={collapsedHeader}></Header>\n\n      {featuredMovie && <FeaturedMovie item={featuredMovie} />}\n      \n      <section className=\"movie-list\">\n        {movieList.map((item, key) => (\n          <MovieRow title={item.title} items={item.items} key={key}></MovieRow>\n        ))}\n      </section>\n\n      <Footer></Footer>\n\n      {movieList.length <= 0 && \n        <div className=\"loading\">\n          <img src=\"https://cdn.lowgif.com/full/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" />\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\ndocument.getElementById('root')\n);\n"],"sourceRoot":""}